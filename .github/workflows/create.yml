
name: Create Isolated Database

on:
  create:
    branches: [ "feature/**" ]

jobs:
  create:
    name: Create Database
    runs-on: ubuntu-latest
    env:
      OP_DEF_PWD: ${{ secrets.FT_DEFAULT_ADMIN_PASSWORD }}
      BRANCH_REF: ${{ github.event.ref }}
      COMPARTMENT_OCID: ${{ secrets.OCI_COMPARTMENT_OCID }}
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    outputs:
      idname: ${{ steps.getname.outputs.idname }}
      dbocid: ${{ steps.getocid.outputs.dbocid }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Retrieve DBName
      id: getname
      run: echo "idname=$(python get.py "$BRANCH_REF")" >> "$GITHUB_OUTPUT"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Get the GKE credentials so we can deploy to the cluster
    - name: Configure Kubectl
      uses: oracle-actions/configure-kubectl-oke@v1.3.2
      id: test-configure-kubectl-oke-action
      with:
        cluster: ${{ secrets.OKE_CLUSTER_OCID }}

    # Test access
    - name: Check Nodes
      run: kubectl get nodes -A


     # Create Namespace and Secret
    - name: Create Kubernetes resources
      run: |-
        kubectl create namespace ft-${{ steps.getname.outputs.idname }}
        kubectl create secret -n ft-${{ steps.getname.outputs.idname }} generic default-admin-password --from-literal=default-admin-password="$OP_DEF_PWD"

    # Run Kustomize and Deploy
    - name: Deploy ADB
      run: |-
        ./generate.sh
        kustomize create --resources base
        kustomize edit set namesuffix ${{ steps.getname.outputs.idname }}
        kustomize edit add patch --path patch.yaml --kind AutonomousDatabase
        kustomize edit set namespace ft-${{ steps.getname.outputs.idname }}
        kustomize build . | kubectl apply -f -
        mv patch.yaml "$RUNNER_TEMP/patch.yaml"

    # Wait for database to get ready
    - name: Wait for Database
      id: getready
      run: |-
        ./query-for-db.sh ${{ steps.getname.outputs.idname }}

    - name: Retrieve DBOCID
      id: getocid
      run: |-
        echo "dbocid=$(kubectl get adb adb-${{ steps.getname.outputs.idname }} -n ft-${{ steps.getname.outputs.idname }} -o 'jsonpath={.spec.details.compartmentOCID}')" >> "$GITHUB_OUTPUT"

  # Get DB OCID
  setup:
    name: Setup Database
    runs-on: ubuntu-latest
    needs: create
    env:
      DB_PWD: ${{ secrets.FT_DEFAULT_ADMIN_PASSWORD }}
      DB_WALLET_PWD: ${{ secrets.DB_WALLET_PASSWORD }}
      DB_OCID: ${{ needs.create.outputs.dbocid }}
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: test
      run: |-
        echo "$DB_OCID" "$DB_WALLET_PWD" > 1.md
        cat 1.md

    - name: Download Wallet
      uses: oracle-actions/run-oci-cli-command@v1.1.1
      id: download-database-wallet
      with:
        command: "db autonomous-database generate-wallet --autonomous-database-id $DB_OCID --password $DB_WALLET_PWD --file wallet.zip --debug"
        silent: false

    # Download SQLCL
    # - name: "Download SQLCL"
    #   run: |-
    #     echo ${{ needs.create.outputs.dbocid }}

  #   # Run LB
  #   - name: "Run admin"
      

    # Loop through Schemas
      
